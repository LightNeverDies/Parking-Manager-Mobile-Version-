{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addUser = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _constants = require(\"../../constants/constants\");\n\nvar addUser = function addUser(username, password, email) {\n  return function _callee(dispatch) {\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(fetch(\"http://192.168.1.5:3000/user/?username=\" + username + \"&password=\" + password + \"&email=\" + email).then(function (response) {\n              return console.log(response);\n            }).then(function (result) {\n              console.log(result);\n              dispatch({\n                type: _constants.userRegister_Success,\n                payload: {\n                  username: result\n                }\n              });\n            }).catch(function (err) {\n              return console.log(err.message);\n            }, dispatch({\n              type: _constants.userRegister_Failed,\n              payload: {\n                error: err.message\n              }\n            })));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nexports.addUser = addUser;","map":{"version":3,"sources":["C:/Users/morqk/OneDrive/Desktop/Parking-Manager-Mobile-Version-/ParkingManager-Mobile-Version/ui/src/reduxStore/register/actions/addUser.js"],"names":["addUser","username","password","email","dispatch","fetch","then","response","console","log","result","type","userRegister_Success","payload","catch","err","message","userRegister_Failed","error"],"mappings":";;;;;;;;;AAAA;;AAEO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAWC,QAAX,EAAqBC,KAArB;AAAA,SAA+B,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC5CC,KAAK,6CAA2CJ,QAA3C,kBAAgEC,QAAhE,eAAkFC,KAAlF,CAAL,CACLG,IADK,CACA,UAACC,QAAD;AAAA,qBAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAAd;AAAA,aADA,EAELD,IAFK,CAEA,UAACI,MAAD,EAAY;AACdF,cAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAN,cAAAA,QAAQ,CAAE;AACNO,gBAAAA,IAAI,EAAEC,+BADA;AAENC,gBAAAA,OAAO,EAAE;AAAEZ,kBAAAA,QAAQ,EAAES;AAAZ;AAFH,eAAF,CAAR;AAIH,aARK,EASLI,KATK,CASC,UAACC,GAAD;AAAA,qBACHP,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACC,OAAhB,CADG;AAAA,aATD,EAWFZ,QAAQ,CAAC;AACTO,cAAAA,IAAI,EAAEM,8BADG;AAETJ,cAAAA,OAAO,EAAE;AAAEK,gBAAAA,KAAK,EAAEH,GAAG,CAACC;AAAb;AAFA,aAAD,CAXN,CAD4C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;AAAA,CAAhB","sourcesContent":["import { userRegister_Success, userRegister_Failed } from '../../constants/constants'\r\n\r\nexport const addUser = (username, password, email) => async (dispatch) => {\r\n    await fetch(`http://192.168.1.5:3000/user/?username=${username}&password=${password}&email=${email}`)\r\n    .then((response) => console.log(response))\r\n    .then((result) => {\r\n        console.log(result)\r\n        dispatch ({\r\n            type: userRegister_Success,\r\n            payload: { username: result }\r\n        })\r\n    })\r\n    .catch((err) =>\r\n        console.log(err.message), \r\n        dispatch({\r\n        type: userRegister_Failed,\r\n        payload: { error: err.message }\r\n    }))\r\n}"]},"metadata":{},"sourceType":"script"}