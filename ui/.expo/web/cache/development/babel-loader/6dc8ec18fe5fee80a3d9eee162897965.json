{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getArticles = void 0;\n\nvar _constants = require(\"../constants\");\n\nvar URL = \"https://jsonplaceholder.typicode.com/\";\n\nvar getArticles = function getArticles() {\n  return function (dispatch) {\n    console.log('ss');\n    fetch(URL + \"posts\").then(function (response) {\n      return console.log(response);\n    }, response.json()).then(function (result) {\n      console.log(result);\n      dispatch({\n        type: _constants.GET_ARTICLES,\n        payload: result\n      });\n    }).catch(function (err) {\n      return console.error(err.message);\n    });\n  };\n};\n\nexports.getArticles = getArticles;","map":{"version":3,"sources":["C:/Users/morqk/OneDrive/Desktop/Parking-Manager-Mobile-Version-/ParkingManager-Mobile-Version/ui/src/reduxStore/actions/get_articles.js"],"names":["URL","getArticles","dispatch","console","log","fetch","then","response","json","result","type","GET_ARTICLES","payload","catch","err","error","message"],"mappings":";;;;;AAAA;;AACA,IAAMA,GAAG,0CAAT;;AAEO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAACC,QAAD,EAAc;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAC,IAAAA,KAAK,CAAIL,GAAJ,WAAL,CACMM,IADN,CACW,UAACC,QAAD;AAAA,aAAcJ,OAAO,CAACC,GAAR,CAAYG,QAAZ,CAAd;AAAA,KADX,EACgDA,QAAQ,CAACC,IAAT,EADhD,EAEMF,IAFN,CAEW,UAACG,MAAD,EAAY;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACAP,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEC,uBADD;AAELC,QAAAA,OAAO,EAAEH;AAFJ,OAAD,CAAR;AAIH,KARN,EASMI,KATN,CASY,UAACC,GAAD;AAAA,aAASX,OAAO,CAACY,KAAR,CAAcD,GAAG,CAACE,OAAlB,CAAT;AAAA,KATZ;AAUD,GAZ0B;AAAA,CAApB","sourcesContent":["import { GET_ARTICLES } from '../constants'\r\nconst URL = `https://jsonplaceholder.typicode.com/`\r\n\r\nexport const getArticles = () => (dispatch) => {\r\n  console.log('ss')\r\n  fetch(`${URL}posts`)\r\n       .then((response) => console.log(response), response.json())\r\n       .then((result) => {\r\n           console.log(result)\r\n           dispatch({\r\n               type: GET_ARTICLES,\r\n               payload: result\r\n           })\r\n       })\r\n       .catch((err) => console.error(err.message))\r\n}\r\n"]},"metadata":{},"sourceType":"script"}