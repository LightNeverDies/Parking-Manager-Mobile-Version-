{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Buttons = _interopRequireDefault(require(\"../../components/Buttons/Buttons\"));\n\nvar _LogoHolder = _interopRequireDefault(require(\"../../components/LogoHolder/LogoHolder\"));\n\nvar _ForbiddenNames = _interopRequireDefault(require(\"../../config/ForbiddenNames.json\"));\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _addUser2 = require(\"../../reduxStore/register/actions/addUser\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _user_reducer = _interopRequireDefault(require(\"../../reduxStore/register/reducers/user_reducer\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\morqk\\\\OneDrive\\\\Desktop\\\\Parking-Manager-Mobile-Version-\\\\ParkingManager-Mobile-Version\\\\ui\\\\src\\\\pages\\\\Register\\\\RegisterScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RegisterScreen = function (_React$Component) {\n  (0, _inherits2.default)(RegisterScreen, _React$Component);\n\n  var _super = _createSuper(RegisterScreen);\n\n  function RegisterScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, RegisterScreen);\n    _this = _super.call(this);\n\n    _this.emailValidation = function (email) {\n      var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (email.length != '') {\n        if (reg.test(email) === false) {\n          _this.state.errorStatusEmail = false;\n\n          _this.setState({\n            errorMessageEmail: 'Error: Email address is invalid.'\n          });\n        } else {\n          _this.setState({\n            email: email\n          });\n\n          _this.state.errorStatusEmail = true;\n        }\n      } else {\n        _this.state.errorStatusEmail = false;\n\n        _this.setState({\n          errorMessageEmail: 'Error: Input field cannot be empty.'\n        });\n\n        return false;\n      }\n    };\n\n    _this.passwordValidation = function (password) {\n      var reg = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n\n      if (password.length != '') {\n        if (reg.test(password) === false) {\n          _this.state.errorStatusPassword = false;\n\n          _this.setState({\n            errorMessagePassword: 'Error: Password is invalid. Minimum eight characters, at least one letter and one number'\n          });\n        } else {\n          _this.setState({\n            password: password\n          });\n\n          _this.state.errorStatusPassword = true;\n        }\n\n        return true;\n      } else {\n        _this.state.errorStatusPassword = false;\n\n        _this.setState({\n          errorMessagePassword: 'Error: Input field cannot be empty.'\n        });\n\n        return false;\n      }\n    };\n\n    _this.usernameValidation = function (username) {\n      if (username.length != '' && username.length > 2) {\n        if (_ForbiddenNames.default.reservedwords.includes(username.toLowerCase())) {\n          _this.state.errorStatusUsername = false;\n\n          _this.setState({\n            errorMessageUsername: 'Error: This username is forbidden'\n          });\n        } else {\n          _this.setState({\n            username: username\n          });\n\n          _this.state.errorStatusUsername = true;\n        }\n\n        return true;\n      } else {\n        _this.state.errorStatusUsername = false;\n\n        _this.setState({\n          errorMessageUsername: 'Error: Input field needs to contains at least 3 letters.'\n        });\n\n        return false;\n      }\n    };\n\n    _this.onNext = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n\n      if (_this.emailValidation(email) == true || _this.passwordValidation(password) == true) {\n        _this.setState(function (prevState) {\n          return {\n            status: !prevState.status\n          };\n        });\n      }\n    };\n\n    _this.onMenu = function () {\n      var _this$state2 = _this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          password = _this$state2.password;\n      var navigate = _this.props.navigation.navigate;\n\n      if (_this.usernameValidation(username) == true) {\n        _this.props.addUser(username, password, email);\n\n        navigate('Menu');\n      }\n    };\n\n    _this.renderNextScreen = function () {\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.loginContainer,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_LogoHolder.default, {\n        style: styles.imageContainer,\n        source: require(\"../../../assets/favicon.png\"),\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.inputForm,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputField,\n        placeholder: \"Username\",\n        onChangeText: function onChangeText(username) {\n          return _this.usernameValidation(username);\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_reactNativePaper.HelperText, {\n        type: \"error\",\n        style: styles.errorMessage,\n        visible: !_this.state.errorStatusUsername,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, _this.state.errorMessageUsername)), _react.default.createElement(_reactNative.View, {\n        style: {\n          marginBottom: 20\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_Buttons.default, {\n        onPress: _this.onMenu,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, \"Sign in\")), _react.default.createElement(_reactNative.View, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_Buttons.default, {\n        onPress: _this.onNext,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, \"Back\"))));\n    };\n\n    _this.renderLoginScreen = function () {\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.loginContainer,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_LogoHolder.default, {\n        source: require(\"../../../assets/favicon.png\"),\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.inputForm,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputField,\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(email) {\n          return _this.emailValidation(email);\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_reactNativePaper.HelperText, {\n        type: \"error\",\n        style: styles.errorMessage,\n        visible: !_this.state.errorStatusEmail,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, _this.state.errorMessageEmail)), _react.default.createElement(_reactNative.View, {\n        style: styles.inputForm,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputField,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this.passwordValidation(password);\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_reactNativePaper.HelperText, {\n        type: \"error\",\n        style: styles.errorMessage,\n        visible: !_this.state.errorStatusPassword,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, _this.state.errorMessagePassword)), _react.default.createElement(_reactNative.View, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_Buttons.default, {\n        onPress: _this.onNext,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, \"Next\"))));\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      username: '',\n      status: true,\n      errorStatusEmail: true,\n      errorMessageEmail: '',\n      errorStatusPassword: true,\n      errorMessagePassword: '',\n      errorStatusUsername: true,\n      errorMessageUsername: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(RegisterScreen, [{\n    key: \"render\",\n    value: function render() {\n      var newStatus = this.state;\n      return _react.default.createElement(_react.default.Fragment, null, newStatus.status ? this.renderLoginScreen() : this.renderNextScreen());\n    }\n  }]);\n  return RegisterScreen;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  loginContainer: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'column',\n    marginBottom: 70\n  },\n  inputField: {\n    borderRadius: 3,\n    borderWidth: 0.2,\n    width: \"80%\",\n    padding: 15\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: \"100%\"\n  },\n  inputForm: {\n    alignItems: 'center',\n    width: \"80%\",\n    marginBottom: 30\n  },\n  errorMessage: {\n    alignSelf: 'center',\n    width: \"80%\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.username\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addUser: function addUser(username, password, email) {\n      return dispatch((0, _addUser2.addUser)(username, password, email));\n    }\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(RegisterScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/morqk/OneDrive/Desktop/Parking-Manager-Mobile-Version-/ParkingManager-Mobile-Version/ui/src/pages/Register/RegisterScreen.js"],"names":["RegisterScreen","emailValidation","email","reg","length","test","state","errorStatusEmail","setState","errorMessageEmail","passwordValidation","password","errorStatusPassword","errorMessagePassword","usernameValidation","username","forbiddenWords","reservedwords","includes","toLowerCase","errorStatusUsername","errorMessageUsername","onNext","prevState","status","onMenu","navigate","props","navigation","addUser","renderNextScreen","styles","loginContainer","imageContainer","require","container","inputForm","inputField","errorMessage","marginBottom","renderLoginScreen","newStatus","React","Component","StyleSheet","create","flex","alignItems","flexDirection","borderRadius","borderWidth","width","padding","alignSelf","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { StyleSheet, View, TextInput } from 'react-native'\r\nimport React from 'react'\r\nimport ButtonComp from '@src/components/Buttons/Buttons'\r\nimport LogoHolder from '@src/components/LogoHolder/LogoHolder'\r\nimport forbiddenWords from '@src/config/ForbiddenNames.json'\r\nimport { HelperText } from 'react-native-paper'\r\nimport { addUser } from '@src/reduxStore/register/actions/addUser'\r\nimport { connect } from 'react-redux'\r\nimport UserRequest from '../../reduxStore/register/reducers/user_reducer'\r\n\r\nclass RegisterScreen extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            username: '',\r\n            status: true,\r\n            errorStatusEmail: true,\r\n            errorMessageEmail: '',\r\n            errorStatusPassword: true,\r\n            errorMessagePassword: '',\r\n            errorStatusUsername: true,\r\n            errorMessageUsername: ''\r\n        }\r\n    }\r\n\r\n    emailValidation = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\r\n\r\n        if(email.length != '') {\r\n            if (reg.test(email) === false) {\r\n                this.state.errorStatusEmail = false\r\n                this.setState({ errorMessageEmail: 'Error: Email address is invalid.' })\r\n            } else {\r\n                this.setState({ email: email })\r\n                this.state.errorStatusEmail = true\r\n            }\r\n        } else {\r\n            this.state.errorStatusEmail = false\r\n            this.setState({ errorMessageEmail: 'Error: Input field cannot be empty.' })\r\n            return false\r\n        }\r\n    }\r\n\r\n    passwordValidation = (password) => {\r\n        let reg = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/\r\n\r\n        if(password.length != '') {\r\n            if(reg.test(password) === false) {\r\n                this.state.errorStatusPassword = false\r\n                this.setState({ errorMessagePassword: 'Error: Password is invalid. Minimum eight characters, at least one letter and one number' })\r\n            } else {\r\n                this.setState({ password: password })\r\n                this.state.errorStatusPassword = true\r\n            }\r\n            return true\r\n        } else {\r\n            this.state.errorStatusPassword = false\r\n            this.setState({ errorMessagePassword: 'Error: Input field cannot be empty.'})\r\n            return false\r\n        }\r\n    }\r\n\r\n    usernameValidation = (username) => {\r\n        if(username.length != '' && username.length > 2) {\r\n            if(forbiddenWords.reservedwords.includes(username.toLowerCase())) {\r\n                this.state.errorStatusUsername = false\r\n                this.setState({ errorMessageUsername: 'Error: This username is forbidden' })\r\n            } else {\r\n                this.setState({ username: username })\r\n                this.state.errorStatusUsername = true\r\n            }\r\n            return true\r\n        } else {\r\n            this.state.errorStatusUsername = false\r\n            this.setState({ errorMessageUsername: 'Error: Input field needs to contains at least 3 letters.' })\r\n            return false\r\n        }\r\n    }\r\n\r\n    onNext = () => {\r\n        const { email, password } = this.state\r\n        if(this.emailValidation(email) == true || this.passwordValidation(password) == true) {\r\n            this.setState((prevState) => ({status: !prevState.status}))\r\n        }\r\n    }\r\n\r\n    onMenu = () => {\r\n        const { username, email, password } = this.state\r\n        const { navigate } = this.props.navigation\r\n        if(this.usernameValidation(username) == true){\r\n            this.props.addUser(username, password, email)\r\n            navigate('Menu')\r\n        }\r\n    }\r\n\r\n    renderNextScreen = () =>{\r\n        return (\r\n        <View style={styles.loginContainer}>\r\n                <LogoHolder style={styles.imageContainer} source={require('../../../assets/favicon.png')}/>\r\n            <View style= {styles.container}>\r\n                <View style = {styles.inputForm}>\r\n                    <TextInput style={styles.inputField} placeholder={\"Username\"} onChangeText={(username) => this.usernameValidation(username)}/>\r\n                    <HelperText type=\"error\" style={styles.errorMessage} visible = {!this.state.errorStatusUsername}>{this.state.errorMessageUsername}</HelperText>\r\n                </View>\r\n                <View style={{ marginBottom: 20 }}>\r\n                    <ButtonComp onPress={this.onMenu}>Sign in</ButtonComp>\r\n                </View>\r\n                <View>\r\n                    <ButtonComp onPress={this.onNext}>Back</ButtonComp>\r\n                </View>\r\n            </View>\r\n        </View>\r\n        )\r\n    }\r\n\r\n    renderLoginScreen = () => {\r\n        return (\r\n            <View style={styles.loginContainer}>\r\n                    <LogoHolder source={require('../../../assets/favicon.png')}/>\r\n                <View style= {styles.container}>\r\n                    <View style = {styles.inputForm}>\r\n                        <TextInput style={styles.inputField} placeholder={\"Email\"} keyboardType=\"email-address\" onChangeText={(email) => this.emailValidation(email)}/>\r\n                        <HelperText type=\"error\" style={styles.errorMessage} visible = {!this.state.errorStatusEmail}>{this.state.errorMessageEmail}</HelperText>\r\n                    </View>\r\n                    <View style = {styles.inputForm}>\r\n                        <TextInput style={styles.inputField} placeholder={\"Password\"} secureTextEntry={true} onChangeText={(password) => this.passwordValidation(password)}/>\r\n                        <HelperText type=\"error\" style={styles.errorMessage} visible = {!this.state.errorStatusPassword}>{this.state.errorMessagePassword}</HelperText>\r\n                    </View>\r\n                    <View>\r\n                        <ButtonComp onPress={this.onNext}>Next</ButtonComp>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const newStatus = this.state\r\n    return (\r\n        <>\r\n         {newStatus.status ? this.renderLoginScreen() : this.renderNextScreen()}\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginContainer: {\r\n        flex:1,\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        marginBottom: 70\r\n    },\r\n    inputField: {\r\n        borderRadius: 3,\r\n        borderWidth: 0.2,\r\n        width: \"80%\",\r\n        padding: 15\r\n    },\r\n    container: {\r\n        flex:1,\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        width: \"100%\"\r\n    },\r\n    inputForm: {\r\n        alignItems: 'center',\r\n        width: \"80%\",\r\n        marginBottom: 30\r\n    },\r\n    errorMessage: {\r\n        alignSelf: 'center',\r\n        width: \"80%\"\r\n    }\r\n})\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.username\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ addUser: (username, password, email) => dispatch(addUser(username, password, email)) })\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterScreen)"]},"metadata":{},"sourceType":"script"}