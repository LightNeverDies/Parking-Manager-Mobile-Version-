{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Parking-Manager-Mobile-Version-\\\\Project\\\\src\\\\components\\\\Table\\\\Table.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Table = function Table(_ref) {\n  var headers = _ref.headers,\n      content = _ref.content,\n      text = _ref.text,\n      itemPerPage = _ref.itemPerPage;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      currPage = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useTable = useTable(content, currPage, itemPerPage),\n      slice = _useTable.slice,\n      range = _useTable.range;\n\n  return _react.default.createElement(_react.default.Fragment, null, TableText(text, content), _react.default.createElement(_reactNative.View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, TableHeader(headers)), TableContent(slice), Pagination(range, setPage, currPage, slice));\n};\n\nvar calculateRange = function calculateRange(content, itemPerPage) {\n  var range = [];\n  var num = Math.ceil(content.length / itemPerPage);\n\n  for (var i = 1; i <= num; i++) {\n    range.push(i);\n  }\n\n  return range;\n};\n\nvar sliceData = function sliceData(content, page, itemPerPage) {\n  return content.slice((page - 1) * itemPerPage, page * itemPerPage);\n};\n\nvar TableHeader = function TableHeader(headers) {\n  return headers == null ? void 0 : headers.map(function (el, index) {\n    return _react.default.createElement(_reactNative.View, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: styles.textRow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, el));\n  });\n};\n\nvar TableText = function TableText(text, content) {\n  return _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, text && content.length > 0 ? _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, text, \" \", content.length) : null);\n};\n\nvar TableContent = function TableContent(slice) {\n  var mapSlice = slice.map(function (el) {\n    return Object.values(el);\n  });\n  return mapSlice.map(function (el, index) {\n    return _react.default.createElement(_reactNative.View, {\n      style: styles.tableContent,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, el.map(function (item, i) {\n      return _react.default.createElement(_reactNative.Text, {\n        key: i,\n        style: styles.textStyleContent,\n        onPress: function onPress() {\n          return _reactNative.ToastAndroid.show(\"\" + item, _reactNative.ToastAndroid.SHORT);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, item);\n    }));\n  });\n};\n\nvar useTable = function useTable(content, page, itemPerPage) {\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      tableRange = _useState4[0],\n      setTableRange = _useState4[1];\n\n  var _useState5 = (0, _react.useState)([]),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      slice = _useState6[0],\n      setSlice = _useState6[1];\n\n  (0, _react.useEffect)(function () {\n    if (content != undefined && itemPerPage != undefined && page != undefined) {\n      var range = calculateRange(content, itemPerPage);\n      setTableRange((0, _toConsumableArray2.default)(range));\n\n      var _slice = sliceData(content, page, itemPerPage);\n\n      setSlice((0, _toConsumableArray2.default)(_slice));\n    }\n  }, [content, setTableRange, page, setSlice]);\n  return {\n    slice: slice,\n    range: tableRange\n  };\n};\n\nvar Pagination = function Pagination(range, setPage, page, slice) {\n  var low = '<';\n  var big = '>';\n  (0, _react.useEffect)(function () {\n    if (slice.length < 1 && page !== 1) {\n      setPage(1);\n    }\n  }, [slice, page, setPage]);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.paginator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.button,\n    key: '<',\n    onPress: function onPress() {\n      if (page <= 0 || page == 1) {\n        setPage(1);\n      } else {\n        setPage(page - 1);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: 'white',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, low)), _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: 'white',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, page), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.button,\n    key: '>',\n    onPress: function onPress() {\n      if (page < range.length) {\n        setPage(page + 1);\n      } else {\n        setPage(1);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: 'white',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, big)));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 6,\n    elevation: 3,\n    backgroundColor: '#12285c',\n    borderColor: 'white',\n    borderWidth: 0.3\n  },\n  tableContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderRadius: 6,\n    elevation: 3,\n    backgroundColor: '#12285c',\n    borderColor: 'white',\n    borderWidth: 0.3\n  },\n  textStyle: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  textStyleContent: {\n    flex: 0.4,\n    padding: 0.2,\n    textAlignVertical: 'center',\n    color: 'white',\n    fontSize: 13,\n    textAlign: 'center'\n  },\n  textRow: {\n    color: 'white',\n    margin: 7\n  },\n  paginator: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    color: '#2c3e50',\n    fontSize: 16,\n    width: _reactNative.Dimensions.get('window').width,\n    height: 60\n  },\n  button: {\n    padding: 7\n  }\n});\n\nmodule.exports = Table;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/src/components/Table/Table.js"],"names":["Table","headers","content","text","itemPerPage","currPage","setPage","useTable","slice","range","TableText","styles","header","TableHeader","TableContent","Pagination","calculateRange","num","Math","ceil","length","i","push","sliceData","page","map","el","index","textRow","textStyle","mapSlice","Object","values","tableContent","item","textStyleContent","ToastAndroid","show","SHORT","tableRange","setTableRange","setSlice","undefined","low","big","paginator","button","color","fontSize","StyleSheet","create","flexDirection","justifyContent","borderRadius","elevation","backgroundColor","borderColor","borderWidth","textAlign","flex","padding","textAlignVertical","margin","alignItems","width","Dimensions","get","height","module","exports"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { StyleSheet, View, Text, Dimensions, TouchableOpacity, ToastAndroid } from 'react-native'\r\n\r\nconst Table = ({ headers, content, text, itemPerPage }) => {\r\n    const [currPage, setPage] = useState('')\r\n    const { slice, range } = useTable(content, currPage, itemPerPage);\r\n    \r\n    return (\r\n        <>\r\n            {TableText(text, content)}\r\n            <View style={styles.header}>\r\n                {TableHeader(headers)}\r\n            </View>\r\n            {TableContent(slice)}\r\n            {Pagination(range, setPage, currPage, slice)}\r\n        </>\r\n    )\r\n}\r\n\r\nconst calculateRange = (content, itemPerPage) => {\r\n    const range = []\r\n    const num = Math.ceil(content.length / itemPerPage)\r\n    \r\n    for(let i = 1; i <= num; i++) {\r\n        range.push(i)\r\n    }\r\n\r\n    return range\r\n}\r\n\r\nconst sliceData = (content, page, itemPerPage) => {\r\n    return content.slice((page - 1) * itemPerPage, page * itemPerPage)\r\n}\r\n\r\nconst TableHeader = (headers) => {\r\n    return headers?.map((el, index) => {\r\n        return (\r\n            <View key={index}>\r\n                <Text style={styles.textRow}>{el}</Text>\r\n            </View>\r\n        )\r\n    })\r\n}\r\n\r\nconst TableText = (text, content) => {\r\n    return (\r\n        <View>\r\n            {\r\n                (text && content.length > 0) ?\r\n                    <Text style={styles.textStyle}>{text} {content.length}</Text>\r\n                : null\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nconst TableContent = (slice) => {\r\n    const mapSlice = slice.map((el) => {\r\n        return Object.values(el)\r\n    })\r\n\r\n    return mapSlice.map((el, index) => {\r\n        return (\r\n            <View style={styles.tableContent} key={index}>\r\n                {el.map((item, i) => {\r\n                    return (\r\n                        <Text key={i} style={styles.textStyleContent} onPress={() => ToastAndroid.show(`${item}`, ToastAndroid.SHORT)}>{item}</Text>\r\n                    )\r\n                })}\r\n            </View>\r\n        )\r\n    })\r\n    \r\n}\r\n\r\n\r\nconst useTable = (content, page, itemPerPage) => {\r\n    const [tableRange, setTableRange] = useState([])\r\n    const [slice, setSlice] = useState([])\r\n  \r\n    useEffect(() => {\r\n       if(content != undefined && itemPerPage != undefined && page != undefined) {\r\n        const range = calculateRange(content, itemPerPage)\r\n        setTableRange([...range])\r\n    \r\n        const slice = sliceData(content, page, itemPerPage)\r\n        setSlice([...slice])\r\n       }\r\n    }, [content, setTableRange, page, setSlice])\r\n  \r\n    return { slice, range: tableRange }\r\n}\r\n\r\nconst Pagination = (range, setPage, page, slice) => {\r\n    const low = '<'\r\n    const big = '>'\r\n    useEffect(() => {\r\n        if(slice.length < 1 && page !== 1) {\r\n            setPage(1)\r\n        }\r\n    }, [slice, page, setPage])\r\n\r\n    return (\r\n        <View style={styles.paginator}>\r\n            <TouchableOpacity style={styles.button} key={'<'}\r\n            onPress={() => \r\n            {\r\n                if(page <= 0 || page == 1) {\r\n                    setPage(1)\r\n                } else {\r\n                    setPage(page - 1)}\r\n                }\r\n            }>\r\n            <Text style={{ color: 'white', fontSize: 20 }}>{low}</Text>\r\n            </TouchableOpacity>\r\n            <Text style={{ color: 'white', fontSize: 20}}>{page}</Text>\r\n            <TouchableOpacity style={styles.button} key={'>'}\r\n            onPress={() => {\r\n                if(page < range.length ) {\r\n                    setPage(page + 1)\r\n                } else {\r\n                    setPage(1)\r\n                }\r\n            }}>\r\n            <Text style={{ color: 'white', fontSize: 20 }}>{big}</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 6,\r\n        elevation: 3,\r\n        backgroundColor: '#12285c',\r\n        borderColor: 'white',\r\n        borderWidth: 0.3,\r\n    },\r\n    tableContent: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        borderRadius: 6,\r\n        elevation: 3,\r\n        backgroundColor: '#12285c',\r\n        borderColor: 'white',\r\n        borderWidth: 0.3\r\n    },\r\n    textStyle: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n    },\r\n    textStyleContent: {\r\n        flex: 0.4,\r\n        padding: 0.2,\r\n        textAlignVertical: 'center', \r\n        color: 'white', \r\n        fontSize: 13, \r\n        textAlign: 'center',\r\n    },\r\n    textRow: {\r\n        color: 'white',\r\n        margin: 7\r\n    },\r\n    paginator: {\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        color: '#2c3e50',\r\n        fontSize: 16,\r\n        width: Dimensions.get('window').width,\r\n        height: 60\r\n    },\r\n    button: {\r\n        padding: 7\r\n    }\r\n})\r\n\r\nmodule.exports =  Table"]},"metadata":{},"sourceType":"script"}