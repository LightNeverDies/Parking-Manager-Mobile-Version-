{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeChartKit = require(\"react-native-chart-kit\");\n\nvar _Statistic = require(\"../../reduxStore/statistic/actions/Statistic\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _information = _interopRequireDefault(require(\"./information.json\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Parking-Manager-Mobile-Version-\\\\Project\\\\src\\\\pages\\\\Information\\\\Information.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Information = function (_React$Component) {\n  (0, _inherits2.default)(Information, _React$Component);\n\n  var _super = _createSuper(Information);\n\n  function Information() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Information);\n    _this = _super.call(this);\n\n    _this.renderInformation = function (data) {\n      return data.map(function (el) {\n        return _react.default.createElement(_reactNative.View, {\n          key: el.id,\n          style: {\n            width: _reactNative.Dimensions.get('window').width,\n            height: 'auto',\n            backgroundColor: '#fb8c00',\n            margin: 5\n          },\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: {\n            color: 'white',\n            fontSize: 13,\n            textAlign: 'left',\n            lineHeight: 20\n          },\n          key: el.id,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }\n        }, el.date, \" : \", el.update));\n      });\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Information, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.data && this.props.data.length == 0) {\n        this.props.requestStatistic();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = Object.values(this.props.data).map(function (item) {\n        return item;\n      });\n      var count = data.map(function (c) {\n        return c.count;\n      });\n      var date = data.map(function (d) {\n        return d.date;\n      });\n      return _react.default.createElement(_reactNative.ScrollView, {\n        style: styles.scrollContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.loginContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, \"News\"), this.renderInformation(_information.default['Added features']), _react.default.createElement(_reactNative.Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, \"Users Registered By Month\"), _react.default.createElement(_reactNativeChartKit.BarChart, {\n        data: {\n          labels: date,\n          datasets: [{\n            data: count\n          }]\n        },\n        width: _reactNative.Dimensions.get('screen').width,\n        height: 220,\n        fromZero: true,\n        verticalLabelRotation: 0,\n        showValuesOnTopOfBars: true,\n        chartConfig: {\n          backgroundColor: \"#e26a00\",\n          backgroundGradientFrom: \"#fb8c00\",\n          backgroundGradientTo: \"#ffa726\",\n          decimalPlaces: 0,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(255, 255, 255, \" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(255, 255, 255, \" + opacity + \")\";\n          },\n          style: {\n            borderRadius: 16\n          },\n          propsForDots: {\n            r: \"6\",\n            strokeWidth: \"2\",\n            stroke: \"#ffa726\"\n          },\n          fillShadowGradient: '#ba2d2d',\n          fillShadowGradientOpacity: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n  return Information;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  loginContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#2A303E'\n  },\n  textStyle: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  scrollContainer: {\n    flex: 1,\n    borderColor: 'white',\n    borderWidth: 0.2,\n    width: _reactNative.Dimensions.get('screen').width,\n    height: _reactNative.Dimensions.get('screen').height,\n    paddingBottom: 300\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.statistic.data\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    requestStatistic: function requestStatistic() {\n      return dispatch((0, _Statistic.requestStatistic)());\n    }\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Information);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/src/pages/Information/Information.js"],"names":["Information","renderInformation","data","map","el","id","width","Dimensions","get","height","backgroundColor","margin","color","fontSize","textAlign","lineHeight","date","update","props","length","requestStatistic","Object","values","item","count","c","d","styles","scrollContainer","loginContainer","textStyle","info","labels","datasets","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","fillShadowGradient","fillShadowGradientOpacity","React","Component","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","borderColor","borderWidth","paddingBottom","mapStateToProps","state","statistic","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, View, Text, Dimensions, ScrollView } from 'react-native';\r\nimport { BarChart } from 'react-native-chart-kit'\r\nimport { requestStatistic } from '@src/reduxStore/statistic/actions/Statistic'\r\nimport { connect } from 'react-redux'\r\nimport info from './information.json'\r\n\r\nclass Information extends React.Component {\r\n    constructor() {\r\n        super()\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if(!this.props.data && this.props.data.length == 0) {\r\n            this.props.requestStatistic()\r\n        }\r\n    }\r\n\r\n    renderInformation = (data) => {\r\n\r\n        return (\r\n            data.map((el) => {\r\n                return(\r\n                    <View key={el.id} style={{ width: Dimensions.get('window').width, height:'auto', backgroundColor:'#fb8c00', margin:5}}>\r\n                        <Text style = {{ color:'white', fontSize:13, textAlign:'left', lineHeight: 20}} key={el.id}>{el.date} : {el.update}</Text>\r\n                    </View>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const data = Object.values(this.props.data).map(item => {\r\n            return item\r\n        })\r\n        \r\n        const count = data.map(c => {\r\n            return c.count\r\n        })\r\n\r\n        const date = data.map(d => {\r\n            return d.date\r\n        })\r\n        \r\n\r\n        return (\r\n        <ScrollView style={styles.scrollContainer}>\r\n            <View style={styles.loginContainer}>\r\n                <Text style = {styles.textStyle}>News</Text>\r\n                {this.renderInformation(info['Added features'])}\r\n                <Text style = {styles.textStyle}>Users Registered By Month</Text>\r\n                <BarChart\r\n                data={{\r\n                    labels: date,\r\n                    datasets: [\r\n                      {\r\n                        data: count\r\n                      }\r\n                    ]\r\n                  }}\r\n                width={Dimensions.get('screen').width}\r\n                height={220}\r\n                fromZero= {true}\r\n                verticalLabelRotation={0}\r\n                showValuesOnTopOfBars={true}\r\n                chartConfig={{\r\n                    backgroundColor: \"#e26a00\",\r\n                    backgroundGradientFrom: \"#fb8c00\",\r\n                    backgroundGradientTo: \"#ffa726\",\r\n                    decimalPlaces: 0,\r\n                    color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                    labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                    style: {\r\n                      borderRadius: 16\r\n                    },\r\n                    propsForDots: {\r\n                      r: \"6\",\r\n                      strokeWidth: \"2\",\r\n                      stroke: \"#ffa726\"\r\n                    },\r\n                    fillShadowGradient:'#ba2d2d',\r\n                    fillShadowGradientOpacity:1,\r\n                  }}\r\n                />\r\n        </View>\r\n        </ScrollView>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginContainer: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#2A303E',\r\n    },\r\n    textStyle: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n    },\r\n    scrollContainer: {\r\n        flex:1,\r\n        borderColor: 'white',\r\n        borderWidth: 0.2,\r\n        width: Dimensions.get('screen').width,\r\n        height: Dimensions.get('screen').height,\r\n        paddingBottom: 300\r\n    }\r\n\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.statistic.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n    requestStatistic: () => dispatch(requestStatistic())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Information)"]},"metadata":{},"sourceType":"script"}