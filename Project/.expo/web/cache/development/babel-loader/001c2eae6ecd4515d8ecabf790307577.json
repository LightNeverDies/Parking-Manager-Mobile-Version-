{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"./utils\");\n\nvar _excluded = [\"sections\", \"style\", \"spacing\", \"fixed\", \"itemDimension\", \"staticDimension\", \"maxDimension\", \"renderItem\", \"keyExtractor\", \"onLayout\", \"additionalRowStyle\", \"itemContainerStyle\", \"invertedRow\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Parking-Manager-Mobile-Version-\\\\Project\\\\node_modules\\\\react-native-super-grid\\\\SectionGrid.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SectionGrid = (0, _react.memo)((0, _react.forwardRef)(function (props, ref) {\n  var sections = props.sections,\n      style = props.style,\n      spacing = props.spacing,\n      fixed = props.fixed,\n      itemDimension = props.itemDimension,\n      staticDimension = props.staticDimension,\n      maxDimension = props.maxDimension,\n      originalRenderItem = props.renderItem,\n      keyExtractor = props.keyExtractor,\n      onLayout = props.onLayout,\n      externalRowStyle = props.additionalRowStyle,\n      itemContainerStyle = props.itemContainerStyle,\n      invertedRow = props.invertedRow,\n      restProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n\n  var _useState = (0, _react.useState)(function () {\n    var defaultTotalDimension = staticDimension;\n\n    if (!staticDimension) {\n      defaultTotalDimension = maxDimension || _reactNative.Dimensions.get('window').width;\n    }\n\n    return defaultTotalDimension;\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      totalDimension = _useState2[0],\n      setTotalDimension = _useState2[1];\n\n  var onLocalLayout = (0, _react.useCallback)(function (e) {\n    if (!staticDimension) {\n      var _ref = e.nativeEvent.layout || {},\n          newTotalDimension = _ref.width;\n\n      if (maxDimension && newTotalDimension > maxDimension) {\n        newTotalDimension = maxDimension;\n      }\n\n      if (totalDimension !== newTotalDimension) {\n        setTotalDimension(newTotalDimension);\n      }\n    }\n\n    if (onLayout) {\n      onLayout(e);\n    }\n  }, [staticDimension, maxDimension, totalDimension, onLayout]);\n  var renderRow = (0, _react.useCallback)(function (_ref2) {\n    var renderItem = _ref2.renderItem,\n        rowItems = _ref2.rowItems,\n        rowIndex = _ref2.rowIndex,\n        section = _ref2.section,\n        itemsPerRow = _ref2.itemsPerRow,\n        rowStyle = _ref2.rowStyle,\n        separators = _ref2.separators,\n        isFirstRow = _ref2.isFirstRow,\n        containerStyle = _ref2.containerStyle;\n    var additionalRowStyle = {};\n\n    if (isFirstRow) {\n      additionalRowStyle = {\n        marginTop: spacing\n      };\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: [rowStyle, additionalRowStyle, externalRowStyle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, rowItems.map(function (item, index) {\n      var i = invertedRow ? -index + itemsPerRow - 1 : index;\n      return _react.default.createElement(_reactNative.View, {\n        key: keyExtractor ? keyExtractor(item, i) : \"item_\" + (rowIndex * itemsPerRow + i),\n        style: [containerStyle, itemContainerStyle],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, renderItem({\n        item: item,\n        index: rowIndex * itemsPerRow + i,\n        section: section,\n        separators: separators,\n        rowIndex: rowIndex\n      }));\n    }));\n  }, [spacing, keyExtractor, externalRowStyle, itemContainerStyle, invertedRow]);\n\n  var _useMemo = (0, _react.useMemo)(function () {\n    return (0, _utils.calculateDimensions)({\n      itemDimension: itemDimension,\n      staticDimension: staticDimension,\n      totalDimension: totalDimension,\n      spacing: spacing,\n      fixed: fixed\n    });\n  }, [itemDimension, staticDimension, totalDimension, spacing, fixed]),\n      containerDimension = _useMemo.containerDimension,\n      itemsPerRow = _useMemo.itemsPerRow,\n      fixedSpacing = _useMemo.fixedSpacing;\n\n  var _useMemo2 = (0, _react.useMemo)(function () {\n    return (0, _utils.generateStyles)({\n      itemDimension: itemDimension,\n      containerDimension: containerDimension,\n      spacing: spacing,\n      fixedSpacing: fixedSpacing,\n      fixed: fixed\n    });\n  }, [itemDimension, containerDimension, spacing, fixedSpacing, fixed]),\n      containerStyle = _useMemo2.containerStyle,\n      rowStyle = _useMemo2.rowStyle;\n\n  var groupSectionsFunc = (0, _react.useCallback)(function (section) {\n    var chunkedData = (0, _utils.chunkArray)(section.data, itemsPerRow);\n\n    if (invertedRow) {\n      chunkedData = chunkedData.map(function ($0) {\n        return $0.reverse();\n      });\n    }\n\n    var _renderItem = section.renderItem || originalRenderItem;\n\n    return _objectSpread(_objectSpread({}, section), {}, {\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n            index = _ref3.index,\n            s = _ref3.section;\n        return renderRow({\n          renderItem: _renderItem,\n          rowItems: item,\n          rowIndex: index,\n          section: s,\n          isFirstRow: index === 0,\n          itemsPerRow: itemsPerRow,\n          rowStyle: rowStyle,\n          containerStyle: containerStyle\n        });\n      },\n      data: chunkedData,\n      originalData: section.data\n    });\n  }, [itemsPerRow, originalRenderItem, renderRow, rowStyle, containerStyle]);\n  var groupedSections = sections.map(groupSectionsFunc);\n  var localKeyExtractor = (0, _react.useCallback)(function (rowItems, index) {\n    if (keyExtractor) {\n      return rowItems.map(function (rowItem, rowItemIndex) {\n        return keyExtractor(rowItem, rowItemIndex);\n      }).join('_');\n    }\n\n    return \"row_\" + index;\n  }, [keyExtractor]);\n  return _react.default.createElement(_reactNative.SectionList, (0, _extends2.default)({\n    onLayout: onLocalLayout,\n    extraData: totalDimension,\n    sections: groupedSections,\n    keyExtractor: localKeyExtractor,\n    style: style,\n    ref: ref\n  }, restProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }));\n}));\nSectionGrid.displayName = 'SectionGrid';\nSectionGrid.propTypes = {\n  renderItem: _propTypes.default.func.isRequired,\n  sections: _propTypes.default.arrayOf(_propTypes.default.any).isRequired,\n  itemDimension: _propTypes.default.number,\n  fixed: _propTypes.default.bool,\n  spacing: _propTypes.default.number,\n  style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  additionalRowStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  itemContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  staticDimension: _propTypes.default.number,\n  onLayout: _propTypes.default.func,\n  maxDimension: _propTypes.default.number,\n  listKey: _propTypes.default.string,\n  keyExtractor: _propTypes.default.func,\n  invertedRow: _propTypes.default.bool\n};\nSectionGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  additionalRowStyle: undefined,\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  onLayout: null,\n  listKey: undefined,\n  maxDimension: undefined,\n  invertedRow: false,\n  keyExtractor: null\n};\nvar _default = SectionGrid;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/node_modules/react-native-super-grid/SectionGrid.js"],"names":["SectionGrid","props","ref","sections","style","spacing","fixed","itemDimension","staticDimension","maxDimension","originalRenderItem","renderItem","keyExtractor","onLayout","externalRowStyle","additionalRowStyle","itemContainerStyle","invertedRow","restProps","defaultTotalDimension","Dimensions","get","width","totalDimension","setTotalDimension","onLocalLayout","e","nativeEvent","layout","newTotalDimension","renderRow","rowItems","rowIndex","section","itemsPerRow","rowStyle","separators","isFirstRow","containerStyle","marginTop","map","item","index","i","containerDimension","fixedSpacing","groupSectionsFunc","chunkedData","data","$0","reverse","s","originalData","groupedSections","localKeyExtractor","rowItem","rowItemIndex","join","displayName","propTypes","PropTypes","func","isRequired","arrayOf","any","number","bool","oneOfType","object","array","listKey","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef, memo, useCallback, useMemo, useState,\n} from 'react';\nimport {\n  View, Dimensions, SectionList,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { generateStyles, calculateDimensions, chunkArray } from './utils';\n\nconst SectionGrid = memo(\n  forwardRef((props, ref) => {\n    const {\n      sections,\n      style,\n      spacing,\n      fixed,\n      itemDimension,\n      staticDimension,\n      maxDimension,\n      renderItem: originalRenderItem,\n      keyExtractor,\n      onLayout,\n      additionalRowStyle: externalRowStyle,\n      itemContainerStyle,\n      invertedRow,\n      ...restProps\n    } = props;\n\n    const [totalDimension, setTotalDimension] = useState(() => {\n      let defaultTotalDimension = staticDimension;\n\n      if (!staticDimension) {\n        defaultTotalDimension = maxDimension || Dimensions.get('window').width;\n      }\n\n      return defaultTotalDimension;\n    });\n\n    const onLocalLayout = useCallback(\n      (e) => {\n        if (!staticDimension) {\n          let { width: newTotalDimension } = e.nativeEvent.layout || {};\n\n          if (maxDimension && newTotalDimension > maxDimension) {\n            newTotalDimension = maxDimension;\n          }\n\n          if (totalDimension !== newTotalDimension) {\n            setTotalDimension(newTotalDimension);\n          }\n        }\n\n        // call onLayout prop if passed\n        if (onLayout) {\n          onLayout(e);\n        }\n      },\n      [staticDimension, maxDimension, totalDimension, onLayout],\n    );\n\n    const renderRow = useCallback(\n      ({\n        renderItem,\n        rowItems,\n        rowIndex,\n        section,\n        itemsPerRow,\n        rowStyle,\n        separators,\n        isFirstRow,\n        containerStyle,\n      }) => {\n        // Add spacing below section header\n        let additionalRowStyle = {};\n        if (isFirstRow) {\n          additionalRowStyle = {\n            marginTop: spacing,\n          };\n        }\n\n        return (\n          <View style={[rowStyle, additionalRowStyle, externalRowStyle]}>\n            {rowItems.map((item, index) => {\n              const i = invertedRow ? -index + itemsPerRow - 1 : index;\n\n              return (\n                <View\n                  key={\n                    keyExtractor\n                      ? keyExtractor(item, i)\n                      : `item_${rowIndex * itemsPerRow + i}`\n                  }\n                  style={[containerStyle, itemContainerStyle]}\n                >\n                  {renderItem({\n                    item,\n                    index: rowIndex * itemsPerRow + i,\n                    section,\n                    separators,\n                    rowIndex,\n                  })}\n                </View>\n              );\n            })}\n          </View>\n        );\n      },\n      [spacing, keyExtractor, externalRowStyle, itemContainerStyle, invertedRow],\n    );\n\n    const { containerDimension, itemsPerRow, fixedSpacing } = useMemo(\n      () => calculateDimensions({\n        itemDimension,\n        staticDimension,\n        totalDimension,\n        spacing,\n        fixed,\n      }),\n      [itemDimension, staticDimension, totalDimension, spacing, fixed],\n    );\n\n    const { containerStyle, rowStyle } = useMemo(\n      () => generateStyles({\n        itemDimension,\n        containerDimension,\n        spacing,\n        fixedSpacing,\n        fixed,\n      }),\n      [itemDimension, containerDimension, spacing, fixedSpacing, fixed],\n    );\n\n    const groupSectionsFunc = useCallback(\n      (section) => {\n        let chunkedData = chunkArray(section.data, itemsPerRow);\n\n        if (invertedRow) {\n          chunkedData = chunkedData.map($0 => $0.reverse());\n        }\n\n        const renderItem = section.renderItem || originalRenderItem;\n\n        return {\n          ...section,\n          renderItem: ({ item, index, section: s }) => renderRow({\n            renderItem,\n            rowItems: item,\n            rowIndex: index,\n            section: s,\n            isFirstRow: index === 0,\n            itemsPerRow,\n            rowStyle,\n            containerStyle,\n          }),\n          data: chunkedData,\n          originalData: section.data,\n        };\n      },\n      [\n        itemsPerRow,\n        originalRenderItem,\n        renderRow,\n        rowStyle,\n        containerStyle,\n      ],\n    );\n\n    const groupedSections = sections.map(groupSectionsFunc);\n\n    const localKeyExtractor = useCallback(\n      (rowItems, index) => {\n        if (keyExtractor) {\n          return rowItems\n            .map((rowItem, rowItemIndex) => keyExtractor(rowItem, rowItemIndex))\n            .join('_');\n        }\n        return `row_${index}`;\n      },\n      [keyExtractor],\n    );\n\n    return (\n      <SectionList\n        onLayout={onLocalLayout}\n        extraData={totalDimension}\n        sections={groupedSections}\n        keyExtractor={localKeyExtractor}\n        style={style}\n        ref={ref}\n        {...restProps}\n      />\n    );\n  }),\n);\n\n\nSectionGrid.displayName = 'SectionGrid';\n\nSectionGrid.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  sections: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  additionalRowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  itemContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticDimension: PropTypes.number,\n  onLayout: PropTypes.func,\n  maxDimension: PropTypes.number,\n  listKey: PropTypes.string,\n  keyExtractor: PropTypes.func,\n  invertedRow: PropTypes.bool,\n};\n\nSectionGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  additionalRowStyle: undefined,\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  onLayout: null,\n  listKey: undefined,\n  maxDimension: undefined,\n  invertedRow: false,\n  keyExtractor: null,\n};\n\n\nexport default SectionGrid;\n"]},"metadata":{},"sourceType":"script"}