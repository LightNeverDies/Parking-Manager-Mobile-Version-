{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"./utils\");\n\nvar _excluded = [\"style\", \"spacing\", \"fixed\", \"data\", \"itemDimension\", \"renderItem\", \"horizontal\", \"onLayout\", \"staticDimension\", \"maxDimension\", \"additionalRowStyle\", \"itemContainerStyle\", \"keyExtractor\", \"invertedRow\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Parking-Manager-Mobile-Version-\\\\Project\\\\node_modules\\\\react-native-super-grid\\\\FlatGrid.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar FlatGrid = (0, _react.memo)((0, _react.forwardRef)(function (props, ref) {\n  var style = props.style,\n      spacing = props.spacing,\n      fixed = props.fixed,\n      data = props.data,\n      itemDimension = props.itemDimension,\n      renderItem = props.renderItem,\n      horizontal = props.horizontal,\n      onLayout = props.onLayout,\n      staticDimension = props.staticDimension,\n      maxDimension = props.maxDimension,\n      externalRowStyle = props.additionalRowStyle,\n      itemContainerStyle = props.itemContainerStyle,\n      keyExtractor = props.keyExtractor,\n      invertedRow = props.invertedRow,\n      restProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n\n  if (props.items && !props.data) {\n    throw new Error('React Native Super Grid - Prop \"items\" has been renamed to \"data\" in version 4');\n  }\n\n  var _useState = (0, _react.useState)(function () {\n    var defaultTotalDimension = staticDimension;\n\n    if (!staticDimension) {\n      var dimension = horizontal ? 'height' : 'width';\n      defaultTotalDimension = maxDimension || _reactNative.Dimensions.get('window')[dimension];\n    }\n\n    return defaultTotalDimension;\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      totalDimension = _useState2[0],\n      setTotalDimension = _useState2[1];\n\n  var onLayoutLocal = (0, _react.useCallback)(function (e) {\n    if (!staticDimension) {\n      var _ref = e.nativeEvent.layout || {},\n          width = _ref.width,\n          height = _ref.height;\n\n      var newTotalDimension = horizontal ? height : width;\n\n      if (maxDimension && newTotalDimension > maxDimension) {\n        newTotalDimension = maxDimension;\n      }\n\n      if (totalDimension !== newTotalDimension) {\n        setTotalDimension(newTotalDimension);\n      }\n    }\n\n    if (onLayout) {\n      onLayout(e);\n    }\n  }, [staticDimension, maxDimension, totalDimension, horizontal, onLayout]);\n  var renderRow = (0, _react.useCallback)(function (_ref2) {\n    var rowItems = _ref2.rowItems,\n        rowIndex = _ref2.rowIndex,\n        separators = _ref2.separators,\n        isLastRow = _ref2.isLastRow,\n        itemsPerRow = _ref2.itemsPerRow,\n        rowStyle = _ref2.rowStyle,\n        containerStyle = _ref2.containerStyle;\n    var additionalRowStyle = {};\n\n    if (isLastRow) {\n      additionalRowStyle = _objectSpread(_objectSpread({}, !horizontal ? {\n        marginBottom: spacing\n      } : {}), horizontal ? {\n        marginRight: spacing\n      } : {});\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: [rowStyle, additionalRowStyle, externalRowStyle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, rowItems.map(function (item, index) {\n      var i = invertedRow ? -index + itemsPerRow - 1 : index;\n      return _react.default.createElement(_reactNative.View, {\n        key: keyExtractor ? keyExtractor(item, i) : \"item_\" + (rowIndex * itemsPerRow + i),\n        style: [containerStyle, itemContainerStyle],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, renderItem({\n        item: item,\n        index: rowIndex * itemsPerRow + i,\n        separators: separators,\n        rowIndex: rowIndex\n      }));\n    }));\n  }, [renderItem, spacing, keyExtractor, externalRowStyle, itemContainerStyle, horizontal, invertedRow]);\n\n  var _useMemo = (0, _react.useMemo)(function () {\n    return (0, _utils.calculateDimensions)({\n      itemDimension: itemDimension,\n      staticDimension: staticDimension,\n      totalDimension: totalDimension,\n      spacing: spacing,\n      fixed: fixed\n    });\n  }, [itemDimension, staticDimension, totalDimension, spacing, fixed]),\n      containerDimension = _useMemo.containerDimension,\n      itemsPerRow = _useMemo.itemsPerRow,\n      fixedSpacing = _useMemo.fixedSpacing;\n\n  var _useMemo2 = (0, _react.useMemo)(function () {\n    return (0, _utils.generateStyles)({\n      horizontal: horizontal,\n      itemDimension: itemDimension,\n      containerDimension: containerDimension,\n      spacing: spacing,\n      fixedSpacing: fixedSpacing,\n      fixed: fixed\n    });\n  }, [horizontal, itemDimension, containerDimension, spacing, fixedSpacing, fixed]),\n      containerStyle = _useMemo2.containerStyle,\n      rowStyle = _useMemo2.rowStyle;\n\n  var rows = (0, _utils.chunkArray)(data, itemsPerRow);\n\n  if (invertedRow) {\n    rows = rows.map(function (r) {\n      return r.reverse();\n    });\n  }\n\n  var localKeyExtractor = (0, _react.useCallback)(function (rowItems, index) {\n    if (keyExtractor) {\n      return rowItems.map(function (rowItem, rowItemIndex) {\n        return keyExtractor(rowItem, rowItemIndex);\n      }).join('_');\n    }\n\n    return \"row_\" + index;\n  }, [keyExtractor]);\n  return _react.default.createElement(_reactNative.FlatList, (0, _extends2.default)({\n    data: rows,\n    ref: ref,\n    extraData: totalDimension,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      return renderRow({\n        rowItems: item,\n        rowIndex: index,\n        isLastRow: index === rows.length - 1,\n        itemsPerRow: itemsPerRow,\n        rowStyle: rowStyle,\n        containerStyle: containerStyle\n      });\n    },\n    style: [_objectSpread({}, horizontal ? {\n      paddingLeft: spacing\n    } : {\n      paddingTop: spacing\n    }), style],\n    onLayout: onLayoutLocal,\n    keyExtractor: localKeyExtractor\n  }, restProps, {\n    horizontal: horizontal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }));\n}));\nFlatGrid.displayName = 'FlatGrid';\nFlatGrid.propTypes = {\n  renderItem: _propTypes.default.func.isRequired,\n  data: _propTypes.default.arrayOf(_propTypes.default.any).isRequired,\n  itemDimension: _propTypes.default.number,\n  maxDimension: _propTypes.default.number,\n  fixed: _propTypes.default.bool,\n  spacing: _propTypes.default.number,\n  style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  additionalRowStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  itemContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  staticDimension: _propTypes.default.number,\n  horizontal: _propTypes.default.bool,\n  onLayout: _propTypes.default.func,\n  keyExtractor: _propTypes.default.func,\n  listKey: _propTypes.default.string,\n  invertedRow: _propTypes.default.bool\n};\nFlatGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  additionalRowStyle: undefined,\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  horizontal: false,\n  onLayout: null,\n  keyExtractor: null,\n  listKey: undefined,\n  maxDimension: undefined,\n  invertedRow: false\n};\nvar _default = FlatGrid;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/node_modules/react-native-super-grid/FlatGrid.js"],"names":["FlatGrid","props","ref","style","spacing","fixed","data","itemDimension","renderItem","horizontal","onLayout","staticDimension","maxDimension","externalRowStyle","additionalRowStyle","itemContainerStyle","keyExtractor","invertedRow","restProps","items","Error","defaultTotalDimension","dimension","Dimensions","get","totalDimension","setTotalDimension","onLayoutLocal","e","nativeEvent","layout","width","height","newTotalDimension","renderRow","rowItems","rowIndex","separators","isLastRow","itemsPerRow","rowStyle","containerStyle","marginBottom","marginRight","map","item","index","i","containerDimension","fixedSpacing","rows","r","reverse","localKeyExtractor","rowItem","rowItemIndex","join","length","paddingLeft","paddingTop","displayName","propTypes","PropTypes","func","isRequired","arrayOf","any","number","bool","oneOfType","object","array","listKey","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef, memo, useState, useCallback, useMemo,\n} from 'react';\nimport {\n  View, Dimensions, FlatList,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { chunkArray, calculateDimensions, generateStyles } from './utils';\n\n\nconst FlatGrid = memo(\n  forwardRef((props, ref) => {\n    const {\n      style,\n      spacing,\n      fixed,\n      data,\n      itemDimension,\n      renderItem,\n      horizontal,\n      onLayout,\n      staticDimension,\n      maxDimension,\n      additionalRowStyle: externalRowStyle,\n      itemContainerStyle,\n      keyExtractor,\n      invertedRow,\n      ...restProps\n    } = props;\n\n    // eslint-disable-next-line react/prop-types\n    if (props.items && !props.data) {\n      // eslint-disable-next-line no-console\n      throw new Error('React Native Super Grid - Prop \"items\" has been renamed to \"data\" in version 4');\n    }\n\n    const [totalDimension, setTotalDimension] = useState(() => {\n      let defaultTotalDimension = staticDimension;\n\n      if (!staticDimension) {\n        const dimension = horizontal ? 'height' : 'width';\n        defaultTotalDimension = maxDimension || Dimensions.get('window')[dimension];\n      }\n\n      return defaultTotalDimension;\n    });\n\n    const onLayoutLocal = useCallback(\n      (e) => {\n        if (!staticDimension) {\n          const { width, height } = e.nativeEvent.layout || {};\n          let newTotalDimension = horizontal ? height : width;\n\n          if (maxDimension && newTotalDimension > maxDimension) {\n            newTotalDimension = maxDimension;\n          }\n\n          if (totalDimension !== newTotalDimension) {\n            setTotalDimension(newTotalDimension);\n          }\n        }\n\n        // call onLayout prop if passed\n        if (onLayout) {\n          onLayout(e);\n        }\n      },\n      [staticDimension, maxDimension, totalDimension, horizontal, onLayout],\n    );\n\n    const renderRow = useCallback(\n      ({\n        rowItems,\n        rowIndex,\n        separators,\n        isLastRow,\n        itemsPerRow,\n        rowStyle,\n        containerStyle,\n      }) => {\n        // To make up for the top padding\n        let additionalRowStyle = {};\n        if (isLastRow) {\n          additionalRowStyle = {\n            ...(!horizontal ? { marginBottom: spacing } : {}),\n            ...(horizontal ? { marginRight: spacing } : {}),\n          };\n        }\n\n        return (\n          <View style={[rowStyle, additionalRowStyle, externalRowStyle]}>\n            {rowItems.map((item, index) => {\n              const i = invertedRow ? -index + itemsPerRow - 1 : index;\n\n              return (\n                <View\n                  key={\n                    keyExtractor\n                      ? keyExtractor(item, i)\n                      : `item_${rowIndex * itemsPerRow + i}`\n                  }\n                  style={[containerStyle, itemContainerStyle]}\n                >\n                  {renderItem({\n                    item,\n                    index: rowIndex * itemsPerRow + i,\n                    separators,\n                    rowIndex,\n                  })}\n                </View>\n              );\n            })}\n          </View>\n        );\n      },\n      [renderItem, spacing, keyExtractor, externalRowStyle, itemContainerStyle, horizontal, invertedRow],\n    );\n\n    const { containerDimension, itemsPerRow, fixedSpacing } = useMemo(\n      () => calculateDimensions({\n        itemDimension,\n        staticDimension,\n        totalDimension,\n        spacing,\n        fixed,\n      }),\n      [itemDimension, staticDimension, totalDimension, spacing, fixed],\n    );\n\n    const { containerStyle, rowStyle } = useMemo(\n      () => generateStyles({\n        horizontal,\n        itemDimension,\n        containerDimension,\n        spacing,\n        fixedSpacing,\n        fixed,\n      }),\n      [horizontal, itemDimension, containerDimension, spacing, fixedSpacing, fixed],\n    );\n\n    let rows = chunkArray(data, itemsPerRow); // Splitting the data into rows\n    if (invertedRow) {\n      rows = rows.map(r => r.reverse());\n    }\n\n    const localKeyExtractor = useCallback(\n      (rowItems, index) => {\n        if (keyExtractor) {\n          return rowItems\n            .map((rowItem, rowItemIndex) => keyExtractor(rowItem, rowItemIndex))\n            .join('_');\n        }\n        return `row_${index}`;\n      },\n      [keyExtractor],\n    );\n\n\n    return (\n      <FlatList\n        data={rows}\n        ref={ref}\n        extraData={totalDimension}\n        renderItem={({ item, index }) => renderRow({\n          rowItems: item,\n          rowIndex: index,\n          isLastRow: index === rows.length - 1,\n          itemsPerRow,\n          rowStyle,\n          containerStyle,\n        })\n        }\n        style={[\n          {\n            ...(horizontal\n              ? { paddingLeft: spacing }\n              : { paddingTop: spacing }),\n          },\n          style,\n        ]}\n        onLayout={onLayoutLocal}\n        keyExtractor={localKeyExtractor}\n        {...restProps}\n        horizontal={horizontal}\n      />\n    );\n  }),\n);\n\n\nFlatGrid.displayName = 'FlatGrid';\n\nFlatGrid.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  maxDimension: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  additionalRowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  itemContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticDimension: PropTypes.number,\n  horizontal: PropTypes.bool,\n  onLayout: PropTypes.func,\n  keyExtractor: PropTypes.func,\n  listKey: PropTypes.string,\n  invertedRow: PropTypes.bool,\n};\n\nFlatGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  additionalRowStyle: undefined,\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  horizontal: false,\n  onLayout: null,\n  keyExtractor: null,\n  listKey: undefined,\n  maxDimension: undefined,\n  invertedRow: false,\n};\n\n\nexport default FlatGrid;\n"]},"metadata":{},"sourceType":"script"}