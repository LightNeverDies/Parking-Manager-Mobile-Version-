{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MaskedText = MaskedText;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _mask = require(\"../utils/mask\");\n\nvar _excluded = [\"children\", \"mask\", \"type\", \"options\"];\n\nfunction MaskedText(_ref) {\n  var text = _ref.children,\n      _ref$mask = _ref.mask,\n      pattern = _ref$mask === void 0 ? \"\" : _ref$mask,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"custom\" : _ref$type,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  return _react.default.createElement(_reactNative.Text, rest, (0, _mask.mask)(text, pattern, type, options));\n}","map":{"version":3,"sources":["MaskedText.tsx"],"names":["children","mask","pattern","type","options","rest"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;AAUO,SAAA,UAAA,OAMyB;AAAA,MANL,IAMK,QAL9BA,QAK8B;AAAA,uBAJ9BC,IAI8B;AAAA,MAJxBC,OAIwB,0BANL,EAMK;AAAA,uBAH9BC,IAG8B;AAAA,MAH9BA,IAG8B,0BANL,QAMK;AAAA,0BAF9BC,OAE8B;AAAA,MAF9BA,OAE8B,6BANL,EAMK;AAAA,MAD3BC,IAC2B;AAC9B,SAAO,eAAA,aAAA,CAAA,iBAAA,EAAA,IAAA,EAAiBJ,gBAAI,IAAJA,EAAI,OAAJA,EAAI,IAAJA,EAAxB,OAAwBA,CAAjB,CAAP;AACD","sourcesContent":["import React from 'react'\nimport { Text, TextProps } from \"react-native\";\nimport { mask } from \"../utils/mask\";\nimport type { MaskOptions } from \"../@types/MaskOptions\";\n\ninterface MaskedTextProps {\n  children: string;\n  mask?: string;\n  type?: \"custom\" | \"currency\";\n  options?: MaskOptions;\n}\n\nexport function MaskedText({\n  children: text,\n  mask: pattern = \"\",\n  type = \"custom\",\n  options = {} as MaskOptions,\n  ...rest\n}: MaskedTextProps & TextProps) {\n  return <Text {...rest}>{mask(text, pattern, type, options)}</Text>;\n}\n"]},"metadata":{},"sourceType":"script"}