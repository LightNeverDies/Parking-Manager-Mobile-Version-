{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"../../constants/constants\");\n\nvar initialStateParkings = {\n  data: [],\n  error: '',\n  loading: false\n};\n\nvar getAllParkingsSpaces = function getAllParkingsSpaces() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateParkings;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case _constants.getAllParkingsSpaces_Success:\n      return {\n        data: action.payload.data,\n        error: '',\n        loading: action.payload.loading\n      };\n\n    case _constants.getAllParkingsSpaces_Failed:\n      return {\n        data: [],\n        error: action.payload.error,\n        loading: action.payload.loading\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar _default = getAllParkingsSpaces;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/src/reduxStore/updateParkingSpaces/reducers/updateParkingSpaces_reducers.js"],"names":["initialStateParkings","data","error","loading","getAllParkingsSpaces","state","action","type","getAllParkingsSpaces_Success","payload","getAllParkingsSpaces_Failed"],"mappings":";;;;;AAAA;;AAEA,IAAMA,oBAAoB,GAAG;AACzBC,EAAAA,IAAI,EAAE,EADmB;AAEzBC,EAAAA,KAAK,EAAE,EAFkB;AAGzBC,EAAAA,OAAO,EAAE;AAHgB,CAA7B;;AAMA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAA0C;AAAA,MAAzCC,KAAyC,uEAAjCL,oBAAiC;AAAA,MAAXM,MAAW;;AACnE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKC,uCAAL;AACI,aAAO;AAACP,QAAAA,IAAI,EAAEK,MAAM,CAACG,OAAP,CAAeR,IAAtB;AAA4BC,QAAAA,KAAK,EAAE,EAAnC;AAAuCC,QAAAA,OAAO,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAA/D,OAAP;;AACJ,SAAKO,sCAAL;AACI,aAAO;AAACT,QAAAA,IAAI,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAEI,MAAM,CAACG,OAAP,CAAeP,KAAjC;AAAwCC,QAAAA,OAAO,EAACG,MAAM,CAACG,OAAP,CAAeN;AAA/D,OAAP;;AACJ;AACI,aAAOE,KAAP;AANR;AAQH,CATD;;eAWeD,oB","sourcesContent":["import { getAllParkingsSpaces_Success, getAllParkingsSpaces_Failed } from '../../constants/constants'\r\n\r\nconst initialStateParkings = {\r\n    data: [],\r\n    error: '',\r\n    loading: false\r\n}\r\n\r\nconst getAllParkingsSpaces = (state = initialStateParkings, action) => {\r\n    switch(action.type) {\r\n        case getAllParkingsSpaces_Success:\r\n            return {data: action.payload.data, error: '', loading: action.payload.loading}\r\n        case getAllParkingsSpaces_Failed:\r\n            return {data: [], error: action.payload.error, loading:action.payload.loading}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default getAllParkingsSpaces\r\n"]},"metadata":{},"sourceType":"script"}