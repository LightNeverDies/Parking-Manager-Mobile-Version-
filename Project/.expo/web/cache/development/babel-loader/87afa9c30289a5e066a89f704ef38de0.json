{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _checkBox = require(\"../../reduxStore/checkBox/actions/checkBox\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Parking-Manager-Mobile-Version-\\\\Project\\\\src\\\\components\\\\Checkbox\\\\Checkbox.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Checkbox = function Checkbox(props) {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    props.checkBoxResult(checked);\n  }, [checked]);\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.Pressable, {\n    style: [styles.checkboxBase, checked && styles.checkboxChecked],\n    onPress: function onPress() {\n      setChecked(!checked);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, checked && _react.default.createElement(_vectorIcons.Ionicons, {\n    name: \"checkmark\",\n    size: 24,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  })));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  checkboxBase: {\n    width: 28,\n    height: 28,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: '#12285c',\n    backgroundColor: 'transparent',\n    marginRight: 10,\n    marginLeft: 10\n  },\n  checkboxChecked: {\n    backgroundColor: '#12285c'\n  },\n  appContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  appTitle: {\n    marginVertical: 16,\n    fontWeight: 'bold',\n    fontSize: 24\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  checkboxLabel: {\n    marginLeft: 8,\n    fontWeight: \"500\",\n    fontSize: 18\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkBoxResult: function checkBoxResult(checked) {\n      return dispatch((0, _checkBox.checkBoxResult)(checked));\n    }\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(Checkbox);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/src/components/Checkbox/Checkbox.js"],"names":["Checkbox","props","checked","setChecked","checkBoxResult","styles","checkboxBase","checkboxChecked","StyleSheet","create","width","height","justifyContent","alignItems","borderRadius","borderWidth","borderColor","backgroundColor","marginRight","marginLeft","appContainer","flex","appTitle","marginVertical","fontWeight","fontSize","checkboxContainer","flexDirection","checkboxLabel","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB,kBAA8B,qBAAS,KAAT,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,wBAAU,YAAM;AACZF,IAAAA,KAAK,CAACG,cAAN,CAAqBF,OAArB;AACH,GAFD,EAEG,CAACA,OAAD,CAFH;AAIA,SACI,4DACI,6BAAC,sBAAD;AACA,IAAA,KAAK,EAAE,CAACG,MAAM,CAACC,YAAR,EAAsBJ,OAAO,IAAIG,MAAM,CAACE,eAAxC,CADP;AAEA,IAAA,OAAO,EAAE,mBAAM;AACXJ,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACC,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKCA,OAAO,IAAI,6BAAC,qBAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAA2B,IAAA,IAAI,EAAE,EAAjC;AAAqC,IAAA,KAAK,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALZ,CADJ,CADJ;AAWH,CAjBD;;AAoBA,IAAMG,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC7BH,EAAAA,YAAY,EAAE;AACZI,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,MAAM,EAAE,EAFI;AAGZC,IAAAA,cAAc,EAAE,QAHJ;AAIZC,IAAAA,UAAU,EAAE,QAJA;AAKZC,IAAAA,YAAY,EAAE,CALF;AAMZC,IAAAA,WAAW,EAAE,CAND;AAOZC,IAAAA,WAAW,EAAE,SAPD;AAQZC,IAAAA,eAAe,EAAE,aARL;AASZC,IAAAA,WAAW,EAAE,EATD;AAUZC,IAAAA,UAAU,EAAE;AAVA,GADe;AAc7BZ,EAAAA,eAAe,EAAE;AACfU,IAAAA,eAAe,EAAE;AADF,GAdY;AAkB7BG,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,CADM;AAEZR,IAAAA,UAAU,EAAE;AAFA,GAlBe;AAuB7BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,EADR;AAERC,IAAAA,UAAU,EAAE,MAFJ;AAGRC,IAAAA,QAAQ,EAAE;AAHF,GAvBmB;AA6B7BC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,aAAa,EAAE,KADE;AAEjBd,IAAAA,UAAU,EAAE;AAFK,GA7BU;AAiC7Be,EAAAA,aAAa,EAAE;AACXT,IAAAA,UAAU,EAAE,CADD;AAEXK,IAAAA,UAAU,EAAE,KAFD;AAGXC,IAAAA,QAAQ,EAAE;AAHC;AAjCc,CAAlB,CAAf;;AAwCA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpC1B,IAAAA,cAAc,EAAE,wBAACF,OAAD;AAAA,aAAa4B,QAAQ,CAAC,8BAAe5B,OAAf,CAAD,CAArB;AAAA;AADoB,GAAL;AAAA,CAAnC;;eAIe,yBAAQ,IAAR,EAAc2B,kBAAd,EAAkC7B,QAAlC,C","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Pressable, StyleSheet } from 'react-native'\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport { connect } from 'react-redux'\r\nimport { checkBoxResult } from '@src/reduxStore/checkBox/actions/checkBox'\r\n\r\nconst Checkbox = (props) => {\r\n    const [checked, setChecked] = useState(false)\r\n    useEffect(() => {\r\n        props.checkBoxResult(checked)\r\n    }, [checked])\r\n\r\n    return(\r\n        <>\r\n            <Pressable \r\n            style={[styles.checkboxBase, checked && styles.checkboxChecked]} \r\n            onPress={() => {\r\n                setChecked(!checked) \r\n                }}>\r\n            {checked && <Ionicons name=\"checkmark\" size={24} color=\"white\" />}\r\n            </Pressable>\r\n        </>  \r\n    ) \r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    checkboxBase: {\r\n      width: 28,\r\n      height: 28,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      borderRadius: 4,\r\n      borderWidth: 2,\r\n      borderColor: '#12285c',\r\n      backgroundColor: 'transparent',\r\n      marginRight: 10,\r\n      marginLeft: 10\r\n    },\r\n  \r\n    checkboxChecked: {\r\n      backgroundColor: '#12285c',\r\n    },\r\n  \r\n    appContainer: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n    },\r\n  \r\n    appTitle: {\r\n      marginVertical: 16,\r\n      fontWeight: 'bold',\r\n      fontSize: 24,\r\n    },\r\n  \r\n    checkboxContainer: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    checkboxLabel: {\r\n        marginLeft: 8,\r\n        fontWeight: \"500\",\r\n        fontSize: 18,\r\n      },\r\n  });\r\n  \r\nconst mapDispatchToProps = dispatch => ({ \r\n    checkBoxResult: (checked) => dispatch(checkBoxResult(checked)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Checkbox) \r\n"]},"metadata":{},"sourceType":"script"}