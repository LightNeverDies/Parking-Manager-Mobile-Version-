{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setUserLocation = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _constants = require(\"../../constants/constants\");\n\nvar setUserLocation = function setUserLocation(lat, lon) {\n  return function _callee(dispatch) {\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(fetch(\"http://192.168.1.2:3000/parkingLots/?lat=\" + lat + \"&lon=\" + lon).then(function (response) {\n              return response.json().then(function (result) {\n                if (!result.error) {\n                  dispatch({\n                    type: _constants.parkingLots_Success\n                  });\n                }\n              }).catch(function (err) {\n                dispatch({\n                  type: _constants.parkingLots_Failed,\n                  payload: {\n                    error: err\n                  }\n                });\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nexports.setUserLocation = setUserLocation;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/src/reduxStore/parkingLots/actions/setUserLocation.js"],"names":["setUserLocation","lat","lon","dispatch","fetch","then","response","json","result","error","type","parkingLots_Success","catch","err","parkingLots_Failed","payload"],"mappings":";;;;;;;;;AAAA;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,GAAN;AAAA,SAAc,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACnCC,KAAK,+CAA6CH,GAA7C,aAAwDC,GAAxD,CAAL,CACDG,IADC,CACI,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACC,IAAT,GACfF,IADe,CACV,UAACG,MAAD,EAAY;AACd,oBAAI,CAACA,MAAM,CAACC,KAAZ,EAAmB;AACfN,kBAAAA,QAAQ,CAAC;AACLO,oBAAAA,IAAI,EAAEC;AADD,mBAAD,CAAR;AAGH;AACJ,eAPe,EAObC,KAPa,CAOP,UAACC,GAAD,EAAS;AACdV,gBAAAA,QAAQ,CAAC;AACLO,kBAAAA,IAAI,EAAEI,6BADD;AAELC,kBAAAA,OAAO,EAAE;AACLN,oBAAAA,KAAK,EAAEI;AADF;AAFJ,iBAAD,CAAR;AAMH,eAde,CAAd;AAAA,aADJ,CADmC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;AAAA,CAAxB","sourcesContent":["import { parkingLots_Success, parkingLots_Failed } from \"../../constants/constants\"\r\n\r\nexport const setUserLocation = (lat, lon) => async (dispatch) => {\r\n    await fetch(`http://192.168.1.2:3000/parkingLots/?lat=${lat}&lon=${lon}`)\r\n        .then((response) => response.json()\r\n            .then((result) => {\r\n                if (!result.error) {\r\n                    dispatch({\r\n                        type: parkingLots_Success,\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: parkingLots_Failed,\r\n                    payload: {\r\n                        error: err\r\n                    }\r\n                })\r\n            })\r\n        )\r\n} "]},"metadata":{},"sourceType":"script"}