{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SocialButtons = _interopRequireDefault(require(\"../../components/SocialButtons/SocialButtons\"));\n\nvar _LogoHolder = _interopRequireDefault(require(\"../../components/LogoHolder/LogoHolder\"));\n\nvar _Buttons = _interopRequireDefault(require(\"../../components/Buttons/Buttons\"));\n\nvar _netinfo = _interopRequireDefault(require(\"@react-native-community/netinfo\"));\n\nvar _CarLoader = _interopRequireDefault(require(\"../../components/CarLoader/CarLoader\"));\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _findUser = require(\"../../reduxStore/login/actions/findUser\");\n\nvar _Reset2 = require(\"../../reduxStore/register/actions/Reset\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Parking-Manager-Mobile-Version-\\\\Project\\\\src\\\\pages\\\\Login\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar unsubscribe = null;\n\nvar LoginScreen = function (_React$Component) {\n  (0, _inherits2.default)(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, LoginScreen);\n    _this = _super.call(this);\n\n    _this.onRegister = function () {\n      if (_this.state.connection_status) {\n        var navigate = _this.props.navigation.navigate;\n\n        _this.props.Reset();\n\n        navigate('Register');\n      }\n    };\n\n    _this.onMenu = function _callee() {\n      var _this$state, email, password, navigate;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n              navigate = _this.props.navigation.navigate;\n\n              if (!_this.state.connection_status) {\n                _context.next = 7;\n                break;\n              }\n\n              if (!(email != '' && password != '')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 6;\n              return _regenerator.default.awrap(_this.props.userFind(email, password));\n\n            case 6:\n              if (_this.props.logged == true) {\n                _this.setState({\n                  errorStatusLogged: true\n                });\n\n                navigate('Menu');\n              } else {\n                _this.setState({\n                  errorStatusLogged: false\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.renderLoginScreen = function () {\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.loginContainer,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.top,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }));\n    };\n\n    _this.state = {\n      connection_status: false,\n      email: '',\n      password: '',\n      errorStatusLogged: true\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(LoginScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      unsubscribe = _netinfo.default.addEventListener(function (state) {\n        return _this2.setState({\n          connection_status: state.isConnected\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (unsubscribe != null) unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_react.default.Fragment, null, this.renderLoginScreen());\n    }\n  }]);\n  return LoginScreen;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  top: {\n    width: _reactNative.Dimensions.get('window').width,\n    height: 40,\n    backgroundColor: '#12285c'\n  },\n  loginContainer: {\n    flex: 2,\n    height: \"100%\",\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#2A303E',\n    marginTop: 30\n  },\n  containerButton: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginTop: 20,\n    backgroundColor: '#00a2de',\n    borderRadius: 8\n  },\n  inputField: {\n    borderRadius: 3,\n    borderColor: 'white',\n    borderWidth: 0.2,\n    color: 'white',\n    width: \"80%\",\n    padding: 15,\n    marginBottom: 30\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: \"100%\",\n    marginBottom: 100\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.login.loading,\n    error: state.login.error,\n    logged: state.login.logged,\n    username: state.login.username\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    userFind: function userFind(email, password) {\n      return dispatch((0, _findUser.userFind)(email, password));\n    },\n    Reset: function Reset() {\n      return dispatch((0, _Reset2.Reset)());\n    }\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LoginScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/src/pages/Login/LoginScreen.js"],"names":["unsubscribe","LoginScreen","onRegister","state","connection_status","navigate","props","navigation","Reset","onMenu","email","password","userFind","logged","setState","errorStatusLogged","renderLoginScreen","styles","loginContainer","top","NetInfo","addEventListener","isConnected","React","Component","StyleSheet","create","width","Dimensions","get","height","backgroundColor","flex","alignItems","justifyContent","flexDirection","marginTop","containerButton","borderRadius","inputField","borderColor","borderWidth","color","padding","marginBottom","container","mapStateToProps","loading","login","error","username","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { StyleSheet, View, TextInput, Dimensions } from 'react-native'\r\nimport React from 'react'\r\nimport SocialButton from '@src/components/SocialButtons/SocialButtons'\r\nimport LogoHolder from '@src/components/LogoHolder/LogoHolder'\r\nimport ButtonComp from '@src/components/Buttons/Buttons'\r\nimport NetInfo from '@react-native-community/netinfo'\r\nimport CarLoader from '@src/components/CarLoader/CarLoader'\r\nimport { HelperText } from 'react-native-paper'\r\nimport { userFind } from '@src/reduxStore/login/actions/findUser'\r\nimport { Reset } from '@src/reduxStore/register/actions/Reset'\r\nimport { connect } from 'react-redux'\r\n\r\nlet unsubscribe = null\r\n\r\nclass LoginScreen extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            connection_status: false,\r\n            email: '',\r\n            password: '',\r\n            errorStatusLogged: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        unsubscribe = NetInfo.addEventListener(state =>\r\n            this.setState({ connection_status: state.isConnected })\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(unsubscribe != null) unsubscribe()\r\n    }\r\n\r\n    onRegister = () => {\r\n        if(this.state.connection_status) {\r\n            const { navigate } = this.props.navigation\r\n            this.props.Reset()\r\n            navigate('Register')\r\n        }\r\n    }\r\n\r\n    onMenu = async() => {\r\n        const { email, password } = this.state\r\n        const { navigate } = this.props.navigation\r\n        if(this.state.connection_status) {\r\n            if(email != '' && password != '') {\r\n                await this.props.userFind(email, password)\r\n                if(this.props.logged == true) {\r\n                    this.setState({ errorStatusLogged: true })\r\n                    navigate('Menu')\r\n                } else {\r\n                    this.setState({ errorStatusLogged: false })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    renderLoginScreen = () => {\r\n        return (\r\n            <View style={styles.loginContainer}>\r\n                    <View style= {styles.top}></View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <>\r\n         {this.renderLoginScreen()}\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    top: {\r\n        width: Dimensions.get('window').width,\r\n        height: 40,\r\n        backgroundColor: '#12285c',\r\n    },\r\n    loginContainer: {\r\n        flex:2,\r\n        height: \"100%\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#2A303E',\r\n        marginTop: 30\r\n    },\r\n    containerButton: {\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        marginTop: 20,\r\n        backgroundColor: '#00a2de',\r\n        borderRadius: 8\r\n    },\r\n    inputField: {\r\n        borderRadius: 3,\r\n        borderColor: 'white',\r\n        borderWidth: 0.2,\r\n        color: 'white',\r\n        width: \"80%\",\r\n        padding: 15,\r\n        marginBottom: 30,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        width: \"100%\",\r\n        marginBottom: 100\r\n    },\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.login.loading,\r\n        error: state.login.error,\r\n        logged: state.login.logged,\r\n        username: state.login.username\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n    userFind: (email, password) => dispatch(userFind(email, password)),\r\n    Reset: () => dispatch(Reset())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen)"]},"metadata":{},"sourceType":"script"}