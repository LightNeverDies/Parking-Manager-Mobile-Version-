{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SocialButtons = _interopRequireDefault(require(\"../../components/SocialButtons/SocialButtons\"));\n\nvar _LogoHolder = _interopRequireDefault(require(\"../../components/LogoHolder/LogoHolder\"));\n\nvar _Buttons = _interopRequireDefault(require(\"../../components/Buttons/Buttons\"));\n\nvar _CarLoader = _interopRequireDefault(require(\"../../components/CarLoader/CarLoader\"));\n\nvar _ConnectionChecker = _interopRequireDefault(require(\"../../components/ConnectionChecker/ConnectionChecker\"));\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _findUser = require(\"../../reduxStore/login/actions/findUser\");\n\nvar _Reset2 = require(\"../../reduxStore/register/actions/Reset\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Parking-Manager-Mobile-Version-\\\\Project\\\\src\\\\pages\\\\Login\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar LoginScreen = function (_React$Component) {\n  (0, _inherits2.default)(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, LoginScreen);\n    _this = _super.call(this);\n\n    _this.componentDidMount = function () {};\n\n    _this.onRegister = function () {\n      var navigate = _this.props.navigation.navigate;\n\n      _this.props.Reset();\n\n      navigate('Register');\n    };\n\n    _this.onMenu = function _callee() {\n      var _this$state, email, password, navigate;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n              navigate = _this.props.navigation.navigate;\n\n              if (!(email != '' && password != '')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regenerator.default.awrap(_this.props.userFind(email, password));\n\n            case 5:\n              if (_this.props.logged == true) {\n                _this.setState({\n                  errorStatusLogged: true\n                });\n\n                navigate('Menu');\n              } else {\n                _this.setState({\n                  errorStatusLogged: false\n                });\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.renderLoginScreen = function () {\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.loginContainer,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.top,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_LogoHolder.default, {\n        source: require(\"../../../assets/favicon.png\"),\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputField,\n        placeholderTextColor: \"white\",\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(value) {\n          return _this.setState({\n            email: value\n          });\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputField,\n        placeholderTextColor: \"white\",\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(value) {\n          return _this.setState({\n            password: value\n          });\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_reactNativePaper.HelperText, {\n        type: \"error\",\n        style: styles.errorMessage,\n        visible: !_this.state.errorStatusLogged,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, _this.props.error), _react.default.createElement(_reactNative.View, {\n        style: styles.containerButton,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_Buttons.default, {\n        onPress: _this.onMenu,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, \"Sign in\"), _react.default.createElement(_Buttons.default, {\n        styles: {\n          backgroundColor: '#00a2de'\n        },\n        onPress: _this.onRegister,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, \"Sign up\")), _react.default.createElement(_SocialButtons.default, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \"Login with Facebook\"), _this.state.connection_status ? _react.default.createElement(_reactNative.View, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 57\n        }\n      }) : _react.default.createElement(_CarLoader.default, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 67\n        }\n      })));\n    };\n\n    _this.state = {\n      connection_status: false,\n      email: '',\n      password: '',\n      errorStatusLogged: true\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_react.default.Fragment, null, this.renderLoginScreen());\n    }\n  }]);\n  return LoginScreen;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  top: {\n    width: _reactNative.Dimensions.get('window').width,\n    height: 40,\n    backgroundColor: '#12285c'\n  },\n  loginContainer: {\n    flex: 1,\n    height: \"100%\",\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#2A303E',\n    marginTop: 30\n  },\n  containerButton: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginTop: 20,\n    backgroundColor: '#00a2de',\n    borderRadius: 8\n  },\n  inputField: {\n    borderRadius: 3,\n    borderColor: 'white',\n    borderWidth: 0.2,\n    color: 'white',\n    width: \"80%\",\n    padding: 15,\n    marginBottom: 30\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: \"100%\",\n    marginTop: 140,\n    marginBottom: 100\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.login.loading,\n    error: state.login.error,\n    logged: state.login.logged,\n    username: state.login.username,\n    check: state.checkInternet.status\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    userFind: function userFind(email, password) {\n      return dispatch((0, _findUser.userFind)(email, password));\n    },\n    Reset: function Reset() {\n      return dispatch((0, _Reset2.Reset)());\n    },\n    checkInternet: function (_checkInternet) {\n      function checkInternet(_x) {\n        return _checkInternet.apply(this, arguments);\n      }\n\n      checkInternet.toString = function () {\n        return _checkInternet.toString();\n      };\n\n      return checkInternet;\n    }(function (netInfo) {\n      return dispatch(checkInternet(netInfo));\n    })\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LoginScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/src/pages/Login/LoginScreen.js"],"names":["LoginScreen","componentDidMount","onRegister","navigate","props","navigation","Reset","onMenu","state","email","password","userFind","logged","setState","errorStatusLogged","renderLoginScreen","styles","loginContainer","top","require","container","inputField","value","errorMessage","error","containerButton","backgroundColor","connection_status","React","Component","StyleSheet","create","width","Dimensions","get","height","flex","alignItems","justifyContent","flexDirection","marginTop","borderRadius","borderColor","borderWidth","color","padding","marginBottom","mapStateToProps","loading","login","username","check","checkInternet","status","mapDispatchToProps","dispatch","netInfo"],"mappings":"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","sourcesContent":["import { StyleSheet, View, TextInput, Dimensions } from 'react-native'\r\nimport React from 'react'\r\nimport SocialButton from '@src/components/SocialButtons/SocialButtons'\r\nimport LogoHolder from '@src/components/LogoHolder/LogoHolder'\r\nimport ButtonComp from '@src/components/Buttons/Buttons'\r\nimport CarLoader from '@src/components/CarLoader/CarLoader'\r\nimport ConnectionChecker from '@src/components/ConnectionChecker/ConnectionChecker'\r\nimport { HelperText } from 'react-native-paper'\r\nimport { userFind } from '@src/reduxStore/login/actions/findUser'\r\nimport { Reset } from '@src/reduxStore/register/actions/Reset'\r\nimport { connect } from 'react-redux'\r\n//import { checkInternet } from '@src/reduxStore/checkInternet/actions/checkInternet'\r\n\r\n\r\nclass LoginScreen extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            connection_status: false,\r\n            email: '',\r\n            password: '',\r\n            errorStatusLogged: true\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //this.setState({ connection_status: this.props.check })\r\n    }\r\n    \r\n    onRegister = () => {\r\n        //if(this.state.connection_status) {\r\n            const { navigate } = this.props.navigation\r\n            this.props.Reset()\r\n            navigate('Register')\r\n        //}\r\n    }\r\n\r\n    onMenu = async() => {\r\n        const { email, password } = this.state\r\n        const { navigate } = this.props.navigation\r\n            if(email != '' && password != '') {\r\n                await this.props.userFind(email, password)\r\n                if(this.props.logged == true) {\r\n                    this.setState({ errorStatusLogged: true })\r\n                    navigate('Menu')\r\n                } else {\r\n                    this.setState({ errorStatusLogged: false })\r\n                }\r\n            }\r\n    }\r\n\r\n    renderLoginScreen = () => {\r\n        return (\r\n            <View style={styles.loginContainer}>\r\n                    <View style= {styles.top}></View>\r\n                    {/* <ConnectionChecker/> */}\r\n                    <LogoHolder source={require('../../../assets/favicon.png')}/>\r\n                <View style= {styles.container}>\r\n                    <TextInput style={styles.inputField} placeholderTextColor=\"white\" placeholder={\"Email\"} keyboardType=\"email-address\" onChangeText={value => this.setState({ email: value })}/>\r\n                    <TextInput style={styles.inputField} placeholderTextColor=\"white\" placeholder={\"Password\"} secureTextEntry={true} onChangeText={value => this.setState({ password: value })}/>\r\n                    <HelperText type=\"error\" style={ styles.errorMessage } visible = { !this.state.errorStatusLogged }>{ this.props.error }</HelperText>\r\n                    <View style={styles.containerButton}>\r\n                        <ButtonComp onPress={ this.onMenu }>Sign in</ButtonComp>\r\n                        <ButtonComp styles={{ backgroundColor: '#00a2de' }} onPress={ this.onRegister }>Sign up</ButtonComp>\r\n                    </View>\r\n                        <SocialButton>Login with Facebook</SocialButton>\r\n                        {this.state.connection_status ? <View/> : <CarLoader></CarLoader>}\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n             {this.renderLoginScreen()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    top: {\r\n        width: Dimensions.get('window').width,\r\n        height: 40,\r\n        backgroundColor: '#12285c',\r\n    },\r\n    loginContainer: {\r\n        flex:1,\r\n        height: \"100%\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#2A303E',\r\n        marginTop: 30\r\n    },\r\n    containerButton: {\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        marginTop: 20,\r\n        backgroundColor: '#00a2de',\r\n        borderRadius: 8\r\n    },\r\n    inputField: {\r\n        borderRadius: 3,\r\n        borderColor: 'white',\r\n        borderWidth: 0.2,\r\n        color: 'white',\r\n        width: \"80%\",\r\n        padding: 15,\r\n        marginBottom: 30,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        width: \"100%\",\r\n        marginTop: 140,\r\n        marginBottom: 100\r\n    },\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.login.loading,\r\n        error: state.login.error,\r\n        logged: state.login.logged,\r\n        username: state.login.username,\r\n        check: state.checkInternet.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n    userFind: (email, password) => dispatch(userFind(email, password)),\r\n    Reset: () => dispatch(Reset()),\r\n    checkInternet: (netInfo) => dispatch(checkInternet(netInfo))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen)"]},"metadata":{},"sourceType":"script"}