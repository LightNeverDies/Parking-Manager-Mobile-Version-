{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getParkings = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _constants = require(\"../../constants/constants\");\n\nvar getParkings = function getParkings(lat, lon) {\n  return function _callee(dispatch) {\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(fetch(\"http://192.168.1.2:3000/getParkings/?lat=\" + lat + \"&lon=\" + lon).then(function (response) {\n              return response.json().then(function (result) {\n                if (!result.error) {\n                  dispatch({\n                    type: _constants.getParkings_Success,\n                    payload: {\n                      status: result.status,\n                      parkings: result.parkings,\n                      markers: result.markers\n                    }\n                  });\n                }\n              }).catch(function (err) {\n                dispatch({\n                  type: _constants.getParkings_Failed,\n                  payload: {\n                    error: err\n                  }\n                });\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nexports.getParkings = getParkings;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/src/reduxStore/getParkings/actions/getParkings.js"],"names":["getParkings","lat","lon","dispatch","fetch","then","response","json","result","error","type","getParkings_Success","payload","status","parkings","markers","catch","err","getParkings_Failed"],"mappings":";;;;;;;;;AAAA;;AAEO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN;AAAA,SAAc,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC/BC,KAAK,+CAA6CH,GAA7C,aAAwDC,GAAxD,CAAL,CACDG,IADC,CACI,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACC,IAAT,GACfF,IADe,CACV,UAACG,MAAD,EAAY;AACd,oBAAI,CAACA,MAAM,CAACC,KAAZ,EAAmB;AACfN,kBAAAA,QAAQ,CAAC;AACLO,oBAAAA,IAAI,EAAEC,8BADD;AAELC,oBAAAA,OAAO,EAAE;AACLC,sBAAAA,MAAM,EAAEL,MAAM,CAACK,MADV;AAELC,sBAAAA,QAAQ,EAAEN,MAAM,CAACM,QAFZ;AAGLC,sBAAAA,OAAO,EAAEP,MAAM,CAACO;AAHX;AAFJ,mBAAD,CAAR;AAQH;AACJ,eAZe,EAYbC,KAZa,CAYP,UAACC,GAAD,EAAS;AACdd,gBAAAA,QAAQ,CAAC;AACLO,kBAAAA,IAAI,EAAEQ,6BADD;AAELN,kBAAAA,OAAO,EAAE;AACLH,oBAAAA,KAAK,EAAEQ;AADF;AAFJ,iBAAD,CAAR;AAMH,eAnBe,CAAd;AAAA,aADJ,CAD+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;AAAA,CAApB","sourcesContent":["import { getParkings_Success, getParkings_Failed } from '../../constants/constants'\r\n\r\nexport const getParkings = (lat, lon) => async (dispatch) => {\r\n    await fetch(`http://192.168.1.2:3000/getParkings/?lat=${lat}&lon=${lon}`)\r\n        .then((response) => response.json()\r\n            .then((result) => {\r\n                if (!result.error) {\r\n                    dispatch({\r\n                        type: getParkings_Success,\r\n                        payload: {\r\n                            status: result.status,\r\n                            parkings: result.parkings,\r\n                            markers: result.markers\r\n                        }\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: getParkings_Failed,\r\n                    payload: {\r\n                        error: err\r\n                    }\r\n                })\r\n            })\r\n        )\r\n}"]},"metadata":{},"sourceType":"script"}