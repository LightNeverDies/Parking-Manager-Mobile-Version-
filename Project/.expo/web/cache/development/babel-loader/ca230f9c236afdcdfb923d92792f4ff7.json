{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parkingSpaces = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _constants = require(\"../../constants/constants\");\n\nvar parkingSpaces = function parkingSpaces(data) {\n  return function _callee(dispatch) {\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (data) {\n              dispatch({\n                type: _constants.getAllParkingsSpaces_Success,\n                payload: {\n                  data: data,\n                  error: '',\n                  loading: true\n                }\n              });\n            } else {\n              dispatch({\n                type: _constants.getAllParkingsSpaces_Failed,\n                payload: {\n                  data: [],\n                  error: 'No Information Available',\n                  loading: true\n                }\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nexports.parkingSpaces = parkingSpaces;","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/Parking-Manager-Mobile-Version-/Project/src/reduxStore/updateParkingSpaces/actions/updateParkingSpaces.js"],"names":["parkingSpaces","data","dispatch","type","getAllParkingsSpaces_Success","payload","error","loading","getAllParkingsSpaces_Failed"],"mappings":";;;;;;;;;AAAA;;AAEO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD;AAAA,SAAU,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AACnC,gBAAGD,IAAH,EAAS;AACLC,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEC,uCADD;AAELC,gBAAAA,OAAO,EAAE;AACLJ,kBAAAA,IAAI,EAAEA,IADD;AAELK,kBAAAA,KAAK,EAAE,EAFF;AAGLC,kBAAAA,OAAO,EAAE;AAHJ;AAFJ,eAAD,CAAR;AAQH,aATD,MASO;AACHL,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEK,sCADD;AAELH,gBAAAA,OAAO,EAAE;AACLJ,kBAAAA,IAAI,EAAE,EADD;AAELK,kBAAAA,KAAK,EAAE,0BAFF;AAGLC,kBAAAA,OAAO,EAAE;AAHJ;AAFJ,eAAD,CAAR;AAQH;;AAnBkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAAA,CAAtB","sourcesContent":["import { getAllParkingsSpaces_Success, getAllParkingsSpaces_Failed } from '../../constants/constants'\r\n\r\nexport const parkingSpaces = (data) => async(dispatch) => {\r\n    if(data) {\r\n        dispatch({\r\n            type: getAllParkingsSpaces_Success,\r\n            payload: {\r\n                data: data,\r\n                error: '',\r\n                loading: true\r\n            } \r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: getAllParkingsSpaces_Failed,\r\n            payload: {\r\n                data: [],\r\n                error: 'No Information Available',\r\n                loading: true\r\n            }\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}